
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AMPERSAND AND ASSIGN CHAR CHARACTER COLON COMMA COMMENT DIVIDE DO DOT DOUBLE ELSE EQ FLOAT FOR GE GT HASH ID IF INT LBRACE LBRACK LE LPAREN LT MINUS MINUS_EQUAL MINUS_MINUS MOD NE NUMBER OR PIPE PLUS PLUS_EQUAL PLUS_PLUS POINTER POW RBRACE RBRACK RETURN RPAREN SEMICOLON STRING SWITCH TIMES TYPE TYPEDEF VOID WHILEprogram : statement_liststatement : COMMENTstatement : HASHstatement : declaration\n                 | declaration_func\n                 | expression_statement\n                 | if_expression\n                 | for_expreression\n                 | while_expression\n                 | while_do_expression\n                 | returnstatement_list : statement\n                      | statement_list statementdeclaration : TYPE ID SEMICOLON\n                   | TYPE ID ASSIGN expression SEMICOLON\n                   | TYPE ID ASSIGN funct\n                   | TYPE ID ASSIGN block\n                   | TYPE TIMES ID\n                   | TYPE vector\n                   | TYPE vector SEMICOLON\n                   | TYPE TIMES vector SEMICOLON\n                   | TYPE ID LBRACK RBRACK\n                   | TYPE ID LBRACK RBRACK ASSIGN expression SEMICOLONexpression_statement : expression SEMICOLON\n                            | expressionexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression DIVIDE expression\n                  | expression MOD expression\n                  | ID\n                  | NUMBER\n                  | TIMES ID\n                  | expression ASSIGN expression\n                  | STRING\n                  | LPAREN expression RPAREN\n                  | vector\n                  | expression PLUS_PLUS\n                  | expression MINUS_MINUS\n                  | expression PLUS_EQUAL\n                  | expression MINUS_EQUAL\n                  | block\n                  | expression COMMA expression\n                  | functparameters : TYPE ID\n                  | TYPE ID COMMA parameters\n                  | TYPE TIMES ID\n                  | TYPE TIMES ID COMMA parameters\n                  | TYPE ID LBRACK RBRACK\n                  | TYPE ID LBRACK RBRACK COMMA parameters\n                  | TYPE vector COMMA parameters\n                  | ID COMMA parameters\n                  | TIMES ID\n                  | TIMES ID COMMA parameters\n                  | ID LBRACK RBRACK\n                  | ID LBRACK RBRACK COMMA parameters\n                  | vector COMMA parameters\n                  | expression\n                  | parameters COMMA parametersdeclaration_func : TYPE ID LPAREN parameters RPAREN block\n                        | TYPE ID LPAREN RPAREN block\n                        | TYPE TIMES ID LPAREN RPAREN block\n                        | TYPE TIMES ID LPAREN parameters RPAREN blockfunct : ID LPAREN parameters RPAREN\n             | ID LPAREN RPARENif_expression : IF LPAREN condicional RPAREN block\n                     | IF LPAREN condicional RPAREN block ELSE blockcondicional : ID operadoror_comp ID\n                   | ID operadoror_comp NUMBER\n                   | ID operadoror_comp vector\n                   | NUMBER operadoror_comp ID\n                   | NUMBER operadoror_comp NUMBER\n                   | NUMBER operadoror_comp vector\n                   | vector operadoror_comp ID\n                   | vector operadoror_comp NUMBER\n                   | vector operadoror_comp vectorvector : ID LBRACK expression RBRACK\n              | ID LBRACK RBRACK\n              | AMPERSAND vectorblock : LBRACE statement_list RBRACE\n             | LBRACE RBRACEoperadoror_comp : EQ\n                 | NE\n                 | GE\n                 | LE\n                 | GT\n                 | LTfor_expreression : FOR LPAREN declaration ID operadoror_comp ID SEMICOLON ID PLUS_PLUS RPAREN block\n                        | FOR LPAREN declaration ID operadoror_comp ID SEMICOLON ID MINUS_MINUS RPAREN block\n                        | FOR LPAREN declaration ID operadoror_comp NUMBER SEMICOLON ID PLUS_PLUS RPAREN block\n                        | FOR LPAREN declaration ID operadoror_comp NUMBER SEMICOLON ID MINUS_MINUS RPAREN blockwhile_expression : WHILE LPAREN ID operadoror_comp ID RPAREN block\n                        | WHILE LPAREN ID operadoror_comp NUMBER RPAREN block\n                        | WHILE LPAREN NUMBER operadoror_comp ID RPAREN block\n                        | WHILE LPAREN NUMBER operadoror_comp NUMBER RPAREN blockwhile_do_expression : DO block WHILE LPAREN ID operadoror_comp ID RPAREN SEMICOLON\n                           | DO block WHILE LPAREN ID operadoror_comp NUMBER RPAREN SEMICOLON\n                           | DO block WHILE LPAREN NUMBER operadoror_comp ID RPAREN SEMICOLON\n                           | DO block WHILE LPAREN NUMBER operadoror_comp NUMBER RPAREN SEMICOLON return : RETURN expression SEMICOLON'
    
_lr_action_items = {'COMMENT':([0,2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,20,24,28,30,31,34,37,44,45,46,47,49,56,58,59,60,64,66,68,71,76,77,78,79,80,81,82,83,93,94,97,98,99,103,104,107,130,133,145,164,165,182,183,187,190,191,192,193,209,210,211,212,217,218,219,220,],[4,4,-12,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-31,-25,-44,-42,-37,-32,-35,4,-13,-19,-24,-38,-39,-40,-41,-33,-79,4,-81,-14,-18,-20,-78,-65,-26,-27,-28,-29,-30,-34,-43,-36,-100,-80,-16,-17,-22,-21,-77,-64,-15,-61,-66,-60,-62,-23,-63,-67,-92,-93,-95,-94,-96,-97,-99,-98,-88,-89,-90,-91,]),'HASH':([0,2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,20,24,28,30,31,34,37,44,45,46,47,49,56,58,59,60,64,66,68,71,76,77,78,79,80,81,82,83,93,94,97,98,99,103,104,107,130,133,145,164,165,182,183,187,190,191,192,193,209,210,211,212,217,218,219,220,],[5,5,-12,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-31,-25,-44,-42,-37,-32,-35,5,-13,-19,-24,-38,-39,-40,-41,-33,-79,5,-81,-14,-18,-20,-78,-65,-26,-27,-28,-29,-30,-34,-43,-36,-100,-80,-16,-17,-22,-21,-77,-64,-15,-61,-66,-60,-62,-23,-63,-67,-92,-93,-95,-94,-96,-97,-99,-98,-88,-89,-90,-91,]),'TYPE':([0,2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,20,24,28,30,31,34,36,37,44,45,46,47,49,52,56,58,59,60,63,64,66,68,71,76,77,78,79,80,81,82,83,93,94,97,98,99,102,103,104,105,107,108,113,130,133,139,142,143,145,164,165,167,170,182,183,185,187,190,191,192,193,209,210,211,212,217,218,219,220,],[14,14,-12,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-31,-25,-44,-42,-37,-32,-35,14,-13,-19,72,-24,-38,-39,-40,-41,-33,89,-79,14,-81,-14,72,-18,-20,-78,-65,-26,-27,-28,-29,-30,-34,-43,-36,-100,-80,-16,-17,-22,72,-21,-77,72,-64,72,72,-15,-61,72,72,72,-66,-60,-62,72,72,-23,-63,72,-67,-92,-93,-95,-94,-96,-97,-99,-98,-88,-89,-90,-91,]),'IF':([0,2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,20,24,28,30,31,34,37,44,45,46,47,49,56,58,59,60,64,66,68,71,76,77,78,79,80,81,82,83,93,94,97,98,99,103,104,107,130,133,145,164,165,182,183,187,190,191,192,193,209,210,211,212,217,218,219,220,],[22,22,-12,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-31,-25,-44,-42,-37,-32,-35,22,-13,-19,-24,-38,-39,-40,-41,-33,-79,22,-81,-14,-18,-20,-78,-65,-26,-27,-28,-29,-30,-34,-43,-36,-100,-80,-16,-17,-22,-21,-77,-64,-15,-61,-66,-60,-62,-23,-63,-67,-92,-93,-95,-94,-96,-97,-99,-98,-88,-89,-90,-91,]),'FOR':([0,2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,20,24,28,30,31,34,37,44,45,46,47,49,56,58,59,60,64,66,68,71,76,77,78,79,80,81,82,83,93,94,97,98,99,103,104,107,130,133,145,164,165,182,183,187,190,191,192,193,209,210,211,212,217,218,219,220,],[23,23,-12,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-31,-25,-44,-42,-37,-32,-35,23,-13,-19,-24,-38,-39,-40,-41,-33,-79,23,-81,-14,-18,-20,-78,-65,-26,-27,-28,-29,-30,-34,-43,-36,-100,-80,-16,-17,-22,-21,-77,-64,-15,-61,-66,-60,-62,-23,-63,-67,-92,-93,-95,-94,-96,-97,-99,-98,-88,-89,-90,-91,]),'WHILE':([0,2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,20,24,28,30,31,34,37,44,45,46,47,49,54,56,58,59,60,64,66,68,71,76,77,78,79,80,81,82,83,93,94,97,98,99,103,104,107,130,133,145,164,165,182,183,187,190,191,192,193,209,210,211,212,217,218,219,220,],[25,25,-12,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-31,-25,-44,-42,-37,-32,-35,25,-13,-19,-24,-38,-39,-40,-41,-33,92,-79,25,-81,-14,-18,-20,-78,-65,-26,-27,-28,-29,-30,-34,-43,-36,-100,-80,-16,-17,-22,-21,-77,-64,-15,-61,-66,-60,-62,-23,-63,-67,-92,-93,-95,-94,-96,-97,-99,-98,-88,-89,-90,-91,]),'DO':([0,2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,20,24,28,30,31,34,37,44,45,46,47,49,56,58,59,60,64,66,68,71,76,77,78,79,80,81,82,83,93,94,97,98,99,103,104,107,130,133,145,164,165,182,183,187,190,191,192,193,209,210,211,212,217,218,219,220,],[26,26,-12,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-31,-25,-44,-42,-37,-32,-35,26,-13,-19,-24,-38,-39,-40,-41,-33,-79,26,-81,-14,-18,-20,-78,-65,-26,-27,-28,-29,-30,-34,-43,-36,-100,-80,-16,-17,-22,-21,-77,-64,-15,-61,-66,-60,-62,-23,-63,-67,-92,-93,-95,-94,-96,-97,-99,-98,-88,-89,-90,-91,]),'RETURN':([0,2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,20,24,28,30,31,34,37,44,45,46,47,49,56,58,59,60,64,66,68,71,76,77,78,79,80,81,82,83,93,94,97,98,99,103,104,107,130,133,145,164,165,182,183,187,190,191,192,193,209,210,211,212,217,218,219,220,],[27,27,-12,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-31,-25,-44,-42,-37,-32,-35,27,-13,-19,-24,-38,-39,-40,-41,-33,-79,27,-81,-14,-18,-20,-78,-65,-26,-27,-28,-29,-30,-34,-43,-36,-100,-80,-16,-17,-22,-21,-77,-64,-15,-61,-66,-60,-62,-23,-63,-67,-92,-93,-95,-94,-96,-97,-99,-98,-88,-89,-90,-91,]),'ID':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,24,27,28,29,30,31,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,51,53,56,58,59,60,61,62,63,64,66,68,71,72,73,76,77,78,79,80,81,82,83,88,89,93,94,97,98,99,102,103,104,105,106,107,108,110,113,115,116,117,118,119,120,121,122,123,126,127,128,129,130,131,133,139,140,142,143,145,155,156,164,165,167,170,180,181,182,183,185,187,188,189,190,191,192,193,209,210,211,212,217,218,219,220,],[15,15,-12,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,32,-31,-25,-44,-42,49,-37,15,-32,15,-35,57,15,-13,64,-19,15,69,-24,15,15,15,15,15,15,-38,-39,-40,-41,15,-33,85,90,-79,15,-81,-14,95,15,69,-18,-20,-78,-65,109,112,-26,-27,-28,-29,-30,-34,-43,-36,124,125,-100,-80,-16,-17,-22,69,-21,-77,69,15,-64,69,141,69,146,-82,-83,-84,-85,-86,-87,150,153,156,157,160,161,-15,15,-61,69,15,69,69,-66,174,-18,-60,-62,69,69,194,197,-23,-63,69,-67,199,200,-92,-93,-95,-94,-96,-97,-99,-98,-88,-89,-90,-91,]),'NUMBER':([0,2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,20,21,24,27,28,30,31,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,51,53,56,58,59,60,61,62,63,64,66,68,71,76,77,78,79,80,81,82,83,93,94,97,98,99,102,103,104,105,106,107,108,113,115,116,117,118,119,120,121,122,123,127,128,129,130,131,133,139,140,142,143,145,155,164,165,167,170,180,181,182,183,185,187,190,191,192,193,209,210,211,212,217,218,219,220,],[24,24,-12,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-31,-25,-44,-42,-37,24,-32,24,-35,24,-13,-19,24,24,-24,24,24,24,24,24,24,-38,-39,-40,-41,24,-33,86,91,-79,24,-81,-14,24,24,24,-18,-20,-78,-65,-26,-27,-28,-29,-30,-34,-43,-36,-100,-80,-16,-17,-22,24,-21,-77,24,24,-64,24,24,147,-82,-83,-84,-85,-86,-87,149,154,158,159,162,-15,24,-61,24,24,24,24,-66,175,-60,-62,24,24,195,196,-23,-63,24,-67,-92,-93,-95,-94,-96,-97,-99,-98,-88,-89,-90,-91,]),'TIMES':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20,21,24,27,28,30,31,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,55,56,58,59,60,61,62,63,64,66,67,68,69,71,72,74,75,76,77,78,79,80,81,82,83,89,93,94,95,96,97,98,99,102,103,104,105,106,107,108,112,113,130,131,133,137,139,140,142,143,145,163,164,165,167,170,182,183,185,187,190,191,192,193,209,210,211,212,217,218,219,220,],[19,19,-12,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,33,-31,40,-44,-42,-37,19,-32,19,-35,19,-13,-19,19,73,-24,19,19,19,19,19,19,-38,-39,-40,-41,19,-33,40,40,-79,19,-81,-14,19,19,73,-18,-20,40,-78,-31,-65,110,-37,40,40,40,40,40,40,40,40,-36,126,-100,-80,-31,40,-16,-17,-22,73,-21,-77,73,19,-64,73,-33,73,-15,19,-61,-78,73,19,73,73,-66,40,-60,-62,73,73,-23,-63,73,-67,-92,-93,-95,-94,-96,-97,-99,-98,-88,-89,-90,-91,]),'STRING':([0,2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,20,21,24,27,28,30,31,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,56,58,59,60,61,62,63,64,66,68,71,76,77,78,79,80,81,82,83,93,94,97,98,99,102,103,104,105,106,107,108,113,130,131,133,139,140,142,143,145,164,165,167,170,182,183,185,187,190,191,192,193,209,210,211,212,217,218,219,220,],[28,28,-12,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-31,-25,-44,-42,-37,28,-32,28,-35,28,-13,-19,28,28,-24,28,28,28,28,28,28,-38,-39,-40,-41,28,-33,-79,28,-81,-14,28,28,28,-18,-20,-78,-65,-26,-27,-28,-29,-30,-34,-43,-36,-100,-80,-16,-17,-22,28,-21,-77,28,28,-64,28,28,-15,28,-61,28,28,28,28,-66,-60,-62,28,28,-23,-63,28,-67,-92,-93,-95,-94,-96,-97,-99,-98,-88,-89,-90,-91,]),'LPAREN':([0,2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,20,21,22,23,24,25,27,28,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,56,58,59,60,61,62,63,64,66,68,69,71,76,77,78,79,80,81,82,83,92,93,94,95,97,98,99,102,103,104,105,106,107,108,113,130,131,133,139,140,142,143,145,164,165,167,170,182,183,185,187,190,191,192,193,209,210,211,212,217,218,219,220,],[21,21,-12,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,36,-25,-44,-42,-37,21,51,52,-32,53,21,-35,21,-13,63,-19,21,21,-24,21,21,21,21,21,21,-38,-39,-40,-41,21,-33,-79,21,-81,-14,21,21,21,102,-20,-78,36,-65,-26,-27,-28,-29,-30,-34,-43,-36,129,-100,-80,36,-16,-17,-22,21,-21,-77,21,21,-64,21,21,-15,21,-61,21,21,21,21,-66,-60,-62,21,21,-23,-63,21,-67,-92,-93,-95,-94,-96,-97,-99,-98,-88,-89,-90,-91,]),'AMPERSAND':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20,21,24,27,28,29,30,31,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,51,56,58,59,60,61,62,63,64,66,68,71,72,76,77,78,79,80,81,82,83,89,93,94,97,98,99,102,103,104,105,106,107,108,113,115,116,117,118,119,120,121,122,123,126,130,131,133,139,140,142,143,145,164,165,167,170,182,183,185,187,190,191,192,193,209,210,211,212,217,218,219,220,],[29,29,-12,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,29,-31,-25,-44,-42,-37,29,-32,29,-35,29,29,-13,29,-19,29,29,-24,29,29,29,29,29,29,-38,-39,-40,-41,29,-33,29,-79,29,-81,-14,29,29,29,-18,-20,-78,-65,29,-26,-27,-28,-29,-30,-34,-43,-36,29,-100,-80,-16,-17,-22,29,-21,-77,29,29,-64,29,29,29,-82,-83,-84,-85,-86,-87,29,29,29,-15,29,-61,29,29,29,29,-66,-60,-62,29,29,-23,-63,29,-67,-92,-93,-95,-94,-96,-97,-99,-98,-88,-89,-90,-91,]),'LBRACE':([0,2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,20,21,24,26,27,28,30,31,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,56,58,59,60,61,62,63,64,66,68,71,76,77,78,79,80,81,82,83,93,94,97,98,99,101,102,103,104,105,106,107,108,113,114,130,131,132,133,134,139,140,142,143,145,164,165,166,167,170,173,176,177,178,179,182,183,185,187,190,191,192,193,209,210,211,212,213,214,215,216,217,218,219,220,],[30,30,-12,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-31,-25,-44,-42,-37,30,-32,30,30,-35,30,-13,-19,30,30,-24,30,30,30,30,30,30,-38,-39,-40,-41,30,-33,-79,30,-81,-14,30,30,30,-18,-20,-78,-65,-26,-27,-28,-29,-30,-34,-43,-36,-100,-80,-16,-17,-22,30,30,-21,-77,30,30,-64,30,30,30,-15,30,30,-61,30,30,30,30,30,-66,-60,-62,30,30,30,30,30,30,30,30,-23,-63,30,-67,-92,-93,-95,-94,-96,-97,-99,-98,30,30,30,30,-88,-89,-90,-91,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,20,24,28,31,34,37,44,45,46,47,49,56,59,60,64,66,68,71,76,77,78,79,80,81,82,83,93,94,97,98,99,103,104,107,130,133,145,164,165,182,183,187,190,191,192,193,209,210,211,212,217,218,219,220,],[0,-1,-12,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-31,-25,-44,-42,-37,-32,-35,-13,-19,-24,-38,-39,-40,-41,-33,-79,-81,-14,-18,-20,-78,-65,-26,-27,-28,-29,-30,-34,-43,-36,-100,-80,-16,-17,-22,-21,-77,-64,-15,-61,-66,-60,-62,-23,-63,-67,-92,-93,-95,-94,-96,-97,-99,-98,-88,-89,-90,-91,]),'RBRACE':([3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,20,24,28,30,31,34,37,44,45,46,47,49,56,58,59,60,64,66,68,71,76,77,78,79,80,81,82,83,93,94,97,98,99,103,104,107,130,133,145,164,165,182,183,187,190,191,192,193,209,210,211,212,217,218,219,220,],[-12,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-31,-25,-44,-42,-37,-32,-35,59,-13,-19,-24,-38,-39,-40,-41,-33,-79,94,-81,-14,-18,-20,-78,-65,-26,-27,-28,-29,-30,-34,-43,-36,-100,-80,-16,-17,-22,-21,-77,-64,-15,-61,-66,-60,-62,-23,-63,-67,-92,-93,-95,-94,-96,-97,-99,-98,-88,-89,-90,-91,]),'SEMICOLON':([15,16,17,18,20,24,28,32,34,44,45,46,47,49,55,56,59,65,68,71,76,77,78,79,80,81,82,83,94,95,96,97,98,99,104,107,125,163,174,175,201,202,203,204,],[-31,37,-44,-42,-37,-32,-35,60,66,-38,-39,-40,-41,-33,93,-79,-81,103,-78,-65,-26,-27,-28,-29,-30,-34,-43,-36,-80,-31,130,-44,-42,-78,-77,-64,60,182,188,189,209,210,211,212,]),'PLUS':([15,16,17,18,20,24,28,44,45,46,47,49,50,55,56,59,67,68,69,71,74,75,76,77,78,79,80,81,82,83,94,95,96,97,98,104,107,112,137,163,],[-31,38,-44,-42,-37,-32,-35,-38,-39,-40,-41,-33,38,38,-79,-81,38,-78,-31,-65,-37,38,38,38,38,38,38,38,38,-36,-80,-31,38,-44,-42,-77,-64,-33,-78,38,]),'MINUS':([15,16,17,18,20,24,28,44,45,46,47,49,50,55,56,59,67,68,69,71,74,75,76,77,78,79,80,81,82,83,94,95,96,97,98,104,107,112,137,163,],[-31,39,-44,-42,-37,-32,-35,-38,-39,-40,-41,-33,39,39,-79,-81,39,-78,-31,-65,-37,39,39,39,39,39,39,39,39,-36,-80,-31,39,-44,-42,-77,-64,-33,-78,39,]),'DIVIDE':([15,16,17,18,20,24,28,44,45,46,47,49,50,55,56,59,67,68,69,71,74,75,76,77,78,79,80,81,82,83,94,95,96,97,98,104,107,112,137,163,],[-31,41,-44,-42,-37,-32,-35,-38,-39,-40,-41,-33,41,41,-79,-81,41,-78,-31,-65,-37,41,41,41,41,41,41,41,41,-36,-80,-31,41,-44,-42,-77,-64,-33,-78,41,]),'MOD':([15,16,17,18,20,24,28,44,45,46,47,49,50,55,56,59,67,68,69,71,74,75,76,77,78,79,80,81,82,83,94,95,96,97,98,104,107,112,137,163,],[-31,42,-44,-42,-37,-32,-35,-38,-39,-40,-41,-33,42,42,-79,-81,42,-78,-31,-65,-37,42,42,42,42,42,42,42,42,-36,-80,-31,42,-44,-42,-77,-64,-33,-78,42,]),'ASSIGN':([15,16,17,18,20,24,28,32,44,45,46,47,49,50,55,56,59,67,68,69,71,74,75,76,77,78,79,80,81,82,83,94,95,96,97,98,99,104,107,112,125,137,163,],[-31,43,-44,-42,-37,-32,-35,61,-38,-39,-40,-41,-33,43,43,-79,-81,43,-78,-31,-65,-37,43,43,43,43,43,43,43,43,-36,-80,-31,43,-44,-42,131,-77,-64,-33,61,-78,43,]),'PLUS_PLUS':([15,16,17,18,20,24,28,44,45,46,47,49,50,55,56,59,67,68,69,71,74,75,76,77,78,79,80,81,82,83,94,95,96,97,98,104,107,112,137,163,199,200,],[-31,44,-44,-42,-37,-32,-35,-38,-39,-40,-41,-33,44,44,-79,-81,44,-78,-31,-65,-37,44,44,44,44,44,44,44,44,-36,-80,-31,44,-44,-42,-77,-64,-33,-78,44,205,207,]),'MINUS_MINUS':([15,16,17,18,20,24,28,44,45,46,47,49,50,55,56,59,67,68,69,71,74,75,76,77,78,79,80,81,82,83,94,95,96,97,98,104,107,112,137,163,199,200,],[-31,45,-44,-42,-37,-32,-35,-38,-39,-40,-41,-33,45,45,-79,-81,45,-78,-31,-65,-37,45,45,45,45,45,45,45,45,-36,-80,-31,45,-44,-42,-77,-64,-33,-78,45,206,208,]),'PLUS_EQUAL':([15,16,17,18,20,24,28,44,45,46,47,49,50,55,56,59,67,68,69,71,74,75,76,77,78,79,80,81,82,83,94,95,96,97,98,104,107,112,137,163,],[-31,46,-44,-42,-37,-32,-35,-38,-39,-40,-41,-33,46,46,-79,-81,46,-78,-31,-65,-37,46,46,46,46,46,46,46,46,-36,-80,-31,46,-44,-42,-77,-64,-33,-78,46,]),'MINUS_EQUAL':([15,16,17,18,20,24,28,44,45,46,47,49,50,55,56,59,67,68,69,71,74,75,76,77,78,79,80,81,82,83,94,95,96,97,98,104,107,112,137,163,],[-31,47,-44,-42,-37,-32,-35,-38,-39,-40,-41,-33,47,47,-79,-81,47,-78,-31,-65,-37,47,47,47,47,47,47,47,47,-36,-80,-31,47,-44,-42,-77,-64,-33,-78,47,]),'COMMA':([15,16,17,18,20,24,28,44,45,46,47,49,50,55,56,59,67,68,69,70,71,74,75,76,77,78,79,80,81,82,83,94,95,96,97,98,100,104,107,109,111,112,135,136,137,138,141,144,163,168,169,171,172,184,186,198,],[-31,48,-44,-42,-37,-32,-35,-38,-39,-40,-41,-33,48,48,-79,-81,48,-78,105,108,-65,113,48,48,48,48,48,48,48,48,-36,-80,-31,48,-44,-42,108,-77,-64,139,142,143,108,108,167,108,170,108,48,108,185,108,108,108,108,108,]),'RPAREN':([15,17,18,20,24,28,36,44,45,46,47,49,50,56,59,63,68,69,70,71,74,75,76,77,78,79,80,81,82,83,84,94,100,102,104,107,109,112,135,136,137,138,141,144,146,147,148,149,150,151,152,153,154,157,158,159,160,168,169,171,172,184,186,194,195,196,197,198,205,206,207,208,],[-31,-44,-42,-37,-32,-35,71,-38,-39,-40,-41,-33,83,-79,-81,101,-78,-31,107,-65,-37,-58,-26,-27,-28,-29,-30,-34,-43,-36,114,-80,132,134,-77,-64,-45,-33,166,-52,-55,-59,-47,-57,-68,-69,-70,-72,-71,-73,-76,-74,-75,176,177,178,179,-46,-49,-51,-54,-56,-48,201,202,203,204,-50,213,214,215,216,]),'RBRACK':([15,17,18,20,24,28,35,44,45,46,47,49,56,59,62,67,68,71,76,77,78,79,80,81,82,83,94,104,106,107,140,],[-31,-44,-42,-37,-32,-35,68,-38,-39,-40,-41,-33,-79,-81,99,104,-78,-65,-26,-27,-28,-29,-30,-34,-43,-36,-80,-77,137,-64,169,]),'LBRACK':([15,32,57,64,69,85,95,109,125,146,150,153,156,],[35,62,35,35,106,35,35,140,62,35,35,35,35,]),'EQ':([56,68,85,86,87,90,91,104,124,161,162,],[-79,-78,116,116,116,116,116,-77,116,116,116,]),'NE':([56,68,85,86,87,90,91,104,124,161,162,],[-79,-78,117,117,117,117,117,-77,117,117,117,]),'GE':([56,68,85,86,87,90,91,104,124,161,162,],[-79,-78,118,118,118,118,118,-77,118,118,118,]),'LE':([56,68,85,86,87,90,91,104,124,161,162,],[-79,-78,119,119,119,119,119,-77,119,119,119,]),'GT':([56,68,85,86,87,90,91,104,124,161,162,],[-79,-78,120,120,120,120,120,-77,120,120,120,]),'LT':([56,68,85,86,87,90,91,104,124,161,162,],[-79,-78,121,121,121,121,121,-77,121,121,121,]),'ELSE':([59,94,145,],[-81,-80,173,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statement_list':([0,30,],[2,58,]),'statement':([0,2,30,58,],[3,31,3,31,]),'declaration':([0,2,30,52,58,],[6,6,6,88,6,]),'declaration_func':([0,2,30,58,],[7,7,7,7,]),'expression_statement':([0,2,30,58,],[8,8,8,8,]),'if_expression':([0,2,30,58,],[9,9,9,9,]),'for_expreression':([0,2,30,58,],[10,10,10,10,]),'while_expression':([0,2,30,58,],[11,11,11,11,]),'while_do_expression':([0,2,30,58,],[12,12,12,12,]),'return':([0,2,30,58,],[13,13,13,13,]),'expression':([0,2,21,27,30,35,36,38,39,40,41,42,43,48,58,61,62,63,102,105,106,108,113,131,139,140,142,143,167,170,185,],[16,16,50,55,16,67,75,76,77,78,79,80,81,82,16,96,67,75,75,75,67,75,75,163,75,67,75,75,75,75,75,]),'funct':([0,2,21,27,30,35,36,38,39,40,41,42,43,48,58,61,62,63,102,105,106,108,113,131,139,140,142,143,167,170,185,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,97,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'block':([0,2,21,26,27,30,35,36,38,39,40,41,42,43,48,58,61,62,63,101,102,105,106,108,113,114,131,132,134,139,140,142,143,166,167,170,173,176,177,178,179,185,213,214,215,216,],[18,18,18,54,18,18,18,18,18,18,18,18,18,18,18,18,98,18,18,133,18,18,18,18,18,145,18,164,165,18,18,18,18,183,18,18,187,190,191,192,193,18,217,218,219,220,]),'vector':([0,2,14,21,27,29,30,33,35,36,38,39,40,41,42,43,48,51,58,61,62,63,72,89,102,105,106,108,113,115,122,123,126,131,139,140,142,143,167,170,185,],[20,20,34,20,20,56,20,65,20,74,20,20,20,20,20,20,20,87,20,20,20,74,111,34,74,74,20,74,74,148,151,152,65,20,74,20,74,74,74,74,74,]),'parameters':([36,63,102,105,108,113,139,142,143,167,170,185,],[70,100,135,136,138,144,168,171,172,184,186,198,]),'condicional':([51,],[84,]),'operadoror_comp':([85,86,87,90,91,124,161,162,],[115,122,123,127,128,155,180,181,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','analisador_sintatico.py',22),
  ('statement -> COMMENT','statement',1,'p_comment','analisador_sintatico.py',27),
  ('statement -> HASH','statement',1,'p_preprocessor_directive','analisador_sintatico.py',33),
  ('statement -> declaration','statement',1,'p_statement','analisador_sintatico.py',39),
  ('statement -> declaration_func','statement',1,'p_statement','analisador_sintatico.py',40),
  ('statement -> expression_statement','statement',1,'p_statement','analisador_sintatico.py',41),
  ('statement -> if_expression','statement',1,'p_statement','analisador_sintatico.py',42),
  ('statement -> for_expreression','statement',1,'p_statement','analisador_sintatico.py',43),
  ('statement -> while_expression','statement',1,'p_statement','analisador_sintatico.py',44),
  ('statement -> while_do_expression','statement',1,'p_statement','analisador_sintatico.py',45),
  ('statement -> return','statement',1,'p_statement','analisador_sintatico.py',46),
  ('statement_list -> statement','statement_list',1,'p_statement_list','analisador_sintatico.py',51),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','analisador_sintatico.py',52),
  ('declaration -> TYPE ID SEMICOLON','declaration',3,'p_declaration','analisador_sintatico.py',60),
  ('declaration -> TYPE ID ASSIGN expression SEMICOLON','declaration',5,'p_declaration','analisador_sintatico.py',61),
  ('declaration -> TYPE ID ASSIGN funct','declaration',4,'p_declaration','analisador_sintatico.py',62),
  ('declaration -> TYPE ID ASSIGN block','declaration',4,'p_declaration','analisador_sintatico.py',63),
  ('declaration -> TYPE TIMES ID','declaration',3,'p_declaration','analisador_sintatico.py',64),
  ('declaration -> TYPE vector','declaration',2,'p_declaration','analisador_sintatico.py',65),
  ('declaration -> TYPE vector SEMICOLON','declaration',3,'p_declaration','analisador_sintatico.py',66),
  ('declaration -> TYPE TIMES vector SEMICOLON','declaration',4,'p_declaration','analisador_sintatico.py',67),
  ('declaration -> TYPE ID LBRACK RBRACK','declaration',4,'p_declaration','analisador_sintatico.py',68),
  ('declaration -> TYPE ID LBRACK RBRACK ASSIGN expression SEMICOLON','declaration',7,'p_declaration','analisador_sintatico.py',69),
  ('expression_statement -> expression SEMICOLON','expression_statement',2,'p_expression_statement','analisador_sintatico.py',82),
  ('expression_statement -> expression','expression_statement',1,'p_expression_statement','analisador_sintatico.py',83),
  ('expression -> expression PLUS expression','expression',3,'p_expression','analisador_sintatico.py',88),
  ('expression -> expression MINUS expression','expression',3,'p_expression','analisador_sintatico.py',89),
  ('expression -> expression TIMES expression','expression',3,'p_expression','analisador_sintatico.py',90),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression','analisador_sintatico.py',91),
  ('expression -> expression MOD expression','expression',3,'p_expression','analisador_sintatico.py',92),
  ('expression -> ID','expression',1,'p_expression','analisador_sintatico.py',93),
  ('expression -> NUMBER','expression',1,'p_expression','analisador_sintatico.py',94),
  ('expression -> TIMES ID','expression',2,'p_expression','analisador_sintatico.py',95),
  ('expression -> expression ASSIGN expression','expression',3,'p_expression','analisador_sintatico.py',96),
  ('expression -> STRING','expression',1,'p_expression','analisador_sintatico.py',97),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression','analisador_sintatico.py',98),
  ('expression -> vector','expression',1,'p_expression','analisador_sintatico.py',99),
  ('expression -> expression PLUS_PLUS','expression',2,'p_expression','analisador_sintatico.py',100),
  ('expression -> expression MINUS_MINUS','expression',2,'p_expression','analisador_sintatico.py',101),
  ('expression -> expression PLUS_EQUAL','expression',2,'p_expression','analisador_sintatico.py',102),
  ('expression -> expression MINUS_EQUAL','expression',2,'p_expression','analisador_sintatico.py',103),
  ('expression -> block','expression',1,'p_expression','analisador_sintatico.py',104),
  ('expression -> expression COMMA expression','expression',3,'p_expression','analisador_sintatico.py',105),
  ('expression -> funct','expression',1,'p_expression','analisador_sintatico.py',106),
  ('parameters -> TYPE ID','parameters',2,'p_parameters','analisador_sintatico.py',116),
  ('parameters -> TYPE ID COMMA parameters','parameters',4,'p_parameters','analisador_sintatico.py',117),
  ('parameters -> TYPE TIMES ID','parameters',3,'p_parameters','analisador_sintatico.py',118),
  ('parameters -> TYPE TIMES ID COMMA parameters','parameters',5,'p_parameters','analisador_sintatico.py',119),
  ('parameters -> TYPE ID LBRACK RBRACK','parameters',4,'p_parameters','analisador_sintatico.py',120),
  ('parameters -> TYPE ID LBRACK RBRACK COMMA parameters','parameters',6,'p_parameters','analisador_sintatico.py',121),
  ('parameters -> TYPE vector COMMA parameters','parameters',4,'p_parameters','analisador_sintatico.py',122),
  ('parameters -> ID COMMA parameters','parameters',3,'p_parameters','analisador_sintatico.py',123),
  ('parameters -> TIMES ID','parameters',2,'p_parameters','analisador_sintatico.py',124),
  ('parameters -> TIMES ID COMMA parameters','parameters',4,'p_parameters','analisador_sintatico.py',125),
  ('parameters -> ID LBRACK RBRACK','parameters',3,'p_parameters','analisador_sintatico.py',126),
  ('parameters -> ID LBRACK RBRACK COMMA parameters','parameters',5,'p_parameters','analisador_sintatico.py',127),
  ('parameters -> vector COMMA parameters','parameters',3,'p_parameters','analisador_sintatico.py',128),
  ('parameters -> expression','parameters',1,'p_parameters','analisador_sintatico.py',129),
  ('parameters -> parameters COMMA parameters','parameters',3,'p_parameters','analisador_sintatico.py',130),
  ('declaration_func -> TYPE ID LPAREN parameters RPAREN block','declaration_func',6,'p_declaration_func','analisador_sintatico.py',145),
  ('declaration_func -> TYPE ID LPAREN RPAREN block','declaration_func',5,'p_declaration_func','analisador_sintatico.py',146),
  ('declaration_func -> TYPE TIMES ID LPAREN RPAREN block','declaration_func',6,'p_declaration_func','analisador_sintatico.py',147),
  ('declaration_func -> TYPE TIMES ID LPAREN parameters RPAREN block','declaration_func',7,'p_declaration_func','analisador_sintatico.py',148),
  ('funct -> ID LPAREN parameters RPAREN','funct',4,'p_funct','analisador_sintatico.py',155),
  ('funct -> ID LPAREN RPAREN','funct',3,'p_funct','analisador_sintatico.py',156),
  ('if_expression -> IF LPAREN condicional RPAREN block','if_expression',5,'p_if_expression','analisador_sintatico.py',163),
  ('if_expression -> IF LPAREN condicional RPAREN block ELSE block','if_expression',7,'p_if_expression','analisador_sintatico.py',164),
  ('condicional -> ID operadoror_comp ID','condicional',3,'p_condicional','analisador_sintatico.py',171),
  ('condicional -> ID operadoror_comp NUMBER','condicional',3,'p_condicional','analisador_sintatico.py',172),
  ('condicional -> ID operadoror_comp vector','condicional',3,'p_condicional','analisador_sintatico.py',173),
  ('condicional -> NUMBER operadoror_comp ID','condicional',3,'p_condicional','analisador_sintatico.py',174),
  ('condicional -> NUMBER operadoror_comp NUMBER','condicional',3,'p_condicional','analisador_sintatico.py',175),
  ('condicional -> NUMBER operadoror_comp vector','condicional',3,'p_condicional','analisador_sintatico.py',176),
  ('condicional -> vector operadoror_comp ID','condicional',3,'p_condicional','analisador_sintatico.py',177),
  ('condicional -> vector operadoror_comp NUMBER','condicional',3,'p_condicional','analisador_sintatico.py',178),
  ('condicional -> vector operadoror_comp vector','condicional',3,'p_condicional','analisador_sintatico.py',179),
  ('vector -> ID LBRACK expression RBRACK','vector',4,'p_vector','analisador_sintatico.py',183),
  ('vector -> ID LBRACK RBRACK','vector',3,'p_vector','analisador_sintatico.py',184),
  ('vector -> AMPERSAND vector','vector',2,'p_vector','analisador_sintatico.py',185),
  ('block -> LBRACE statement_list RBRACE','block',3,'p_block','analisador_sintatico.py',194),
  ('block -> LBRACE RBRACE','block',2,'p_block','analisador_sintatico.py',195),
  ('operadoror_comp -> EQ','operadoror_comp',1,'p_operador_comp','analisador_sintatico.py',201),
  ('operadoror_comp -> NE','operadoror_comp',1,'p_operador_comp','analisador_sintatico.py',202),
  ('operadoror_comp -> GE','operadoror_comp',1,'p_operador_comp','analisador_sintatico.py',203),
  ('operadoror_comp -> LE','operadoror_comp',1,'p_operador_comp','analisador_sintatico.py',204),
  ('operadoror_comp -> GT','operadoror_comp',1,'p_operador_comp','analisador_sintatico.py',205),
  ('operadoror_comp -> LT','operadoror_comp',1,'p_operador_comp','analisador_sintatico.py',206),
  ('for_expreression -> FOR LPAREN declaration ID operadoror_comp ID SEMICOLON ID PLUS_PLUS RPAREN block','for_expreression',11,'p_for_expression','analisador_sintatico.py',210),
  ('for_expreression -> FOR LPAREN declaration ID operadoror_comp ID SEMICOLON ID MINUS_MINUS RPAREN block','for_expreression',11,'p_for_expression','analisador_sintatico.py',211),
  ('for_expreression -> FOR LPAREN declaration ID operadoror_comp NUMBER SEMICOLON ID PLUS_PLUS RPAREN block','for_expreression',11,'p_for_expression','analisador_sintatico.py',212),
  ('for_expreression -> FOR LPAREN declaration ID operadoror_comp NUMBER SEMICOLON ID MINUS_MINUS RPAREN block','for_expreression',11,'p_for_expression','analisador_sintatico.py',213),
  ('while_expression -> WHILE LPAREN ID operadoror_comp ID RPAREN block','while_expression',7,'p_while_expression','analisador_sintatico.py',219),
  ('while_expression -> WHILE LPAREN ID operadoror_comp NUMBER RPAREN block','while_expression',7,'p_while_expression','analisador_sintatico.py',220),
  ('while_expression -> WHILE LPAREN NUMBER operadoror_comp ID RPAREN block','while_expression',7,'p_while_expression','analisador_sintatico.py',221),
  ('while_expression -> WHILE LPAREN NUMBER operadoror_comp NUMBER RPAREN block','while_expression',7,'p_while_expression','analisador_sintatico.py',222),
  ('while_do_expression -> DO block WHILE LPAREN ID operadoror_comp ID RPAREN SEMICOLON','while_do_expression',9,'p_while_do_expression','analisador_sintatico.py',227),
  ('while_do_expression -> DO block WHILE LPAREN ID operadoror_comp NUMBER RPAREN SEMICOLON','while_do_expression',9,'p_while_do_expression','analisador_sintatico.py',228),
  ('while_do_expression -> DO block WHILE LPAREN NUMBER operadoror_comp ID RPAREN SEMICOLON','while_do_expression',9,'p_while_do_expression','analisador_sintatico.py',229),
  ('while_do_expression -> DO block WHILE LPAREN NUMBER operadoror_comp NUMBER RPAREN SEMICOLON','while_do_expression',9,'p_while_do_expression','analisador_sintatico.py',230),
  ('return -> RETURN expression SEMICOLON','return',3,'p_return','analisador_sintatico.py',235),
]
