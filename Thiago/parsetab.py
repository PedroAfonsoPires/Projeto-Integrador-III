# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AMPERSAND AND ASSIGN CHAR CHARACTER COLON COMMA COMMENT DIVIDE DO DOT DOUBLE ELSE EQ FLOAT FOR GE GT HASH ID IF INT LBRACE LBRACK LE LPAREN LT MINUS MINUS_EQUAL MINUS_MINUS MOD NE NUMBER OR PIPE PLUS PLUS_EQUAL PLUS_PLUS POINTER POW RBRACE RBRACK RETURN RPAREN SEMICOLON STRING SWITCH TIMES TYPE TYPEDEF VOID WHILEprogram : statement_liststatement : COMMENTstatement : HASHstatement : declaration\n| declaration_func\n| expression_statement\n| if_expression\n| for_expreression\n| while_expression\n| while_do_expression\n| returnstatement_list : statement\n| statement_list statementdeclaration : TYPE ID SEMICOLON\n| TYPE ID ASSIGN expression SEMICOLON\n| TYPE ID ASSIGN funct\n| TYPE ID ASSIGN block\n| TYPE TIMES ID\n| TYPE vector\n| TYPE vector SEMICOLON\n| TYPE TIMES vector SEMICOLON\n| TYPE ID LBRACK RBRACK\n| TYPE ID LBRACK RBRACK ASSIGN expression SEMICOLONexpression_statement : expression SEMICOLON\n| expressionexpression : expression PLUS expression\n| expression MINUS expression\n| expression TIMES expression\n| expression DIVIDE expression\n| expression MOD expression\n| ID\n| NUMBER\n| TIMES ID\n| expression ASSIGN expression\n| STRING\n| LPAREN expression RPAREN\n| vector\n| expression PLUS_PLUS\n| expression MINUS_MINUS\n| expression PLUS_EQUAL\n| expression MINUS_EQUAL\n| block\n| expression COMMA expression\n| functparameters : TYPE ID\n| TYPE ID COMMA parameters\n| TYPE TIMES ID\n| TYPE TIMES ID COMMA parameters\n| TYPE ID LBRACK RBRACK\n| TYPE ID LBRACK RBRACK COMMA parameters\n| TYPE vector COMMA parameters\n| ID COMMA parameters\n| TIMES ID\n| TIMES ID COMMA parameters\n| ID LBRACK RBRACK\n| ID LBRACK RBRACK COMMA parameters\n| vector COMMA parameters\n| expression\n| parameters COMMA parametersdeclaration_func : TYPE ID LPAREN parameters RPAREN block\n| TYPE ID LPAREN RPAREN blockfunct : ID LPAREN parameters RPAREN\n| ID LPAREN RPARENif_expression : IF LPAREN condicional RPAREN block\n| IF LPAREN condicional RPAREN block ELSE blockcondicional : ID operadoror_comp ID\n| ID operadoror_comp NUMBER\n| ID operadoror_comp vector\n| NUMBER operadoror_comp ID\n| NUMBER operadoror_comp NUMBER\n| NUMBER operadoror_comp vector\n| vector operadoror_comp ID\n| vector operadoror_comp NUMBER\n| vector operadoror_comp vectorvector : ID LBRACK expression RBRACK\n| AMPERSAND vectorblock : LBRACE statement_list RBRACE\n| LBRACE RBRACEoperadoror_comp : EQ\n| NE\n| GE\n| LE\n| GT\n| LTfor_expreression : FOR LPAREN declaration ID operadoror_comp ID SEMICOLON ID PLUS_PLUS RPAREN block\n| FOR LPAREN declaration ID operadoror_comp ID SEMICOLON ID MINUS_MINUS RPAREN block\n| FOR LPAREN declaration ID operadoror_comp NUMBER SEMICOLON ID PLUS_PLUS RPAREN block\n| FOR LPAREN declaration ID operadoror_comp NUMBER SEMICOLON ID MINUS_MINUS RPAREN blockwhile_expression : WHILE LPAREN ID operadoror_comp ID RPAREN block\n| WHILE LPAREN ID operadoror_comp NUMBER RPAREN block\n| WHILE LPAREN NUMBER operadoror_comp ID RPAREN block\n| WHILE LPAREN NUMBER operadoror_comp NUMBER RPAREN blockwhile_do_expression : DO block WHILE LPAREN ID operadoror_comp ID RPAREN SEMICOLON\n| DO block WHILE LPAREN ID operadoror_comp NUMBER RPAREN SEMICOLON\n| DO block WHILE LPAREN NUMBER operadoror_comp ID RPAREN SEMICOLON\n| DO block WHILE LPAREN NUMBER operadoror_comp NUMBER RPAREN SEMICOLONreturn : RETURN expression SEMICOLON'
    
_lr_action_items = {'COMMENT':([0,2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,20,24,28,30,31,34,37,44,45,46,47,49,56,58,59,60,64,66,70,75,76,77,78,79,80,81,82,92,93,96,97,98,101,102,105,127,130,140,158,174,178,181,182,183,184,200,201,202,203,208,209,210,211,],[4,4,-12,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-31,-25,-44,-42,-37,-32,-35,4,-13,-19,-24,-38,-39,-40,-41,-33,-76,4,-78,-14,-18,-20,-63,-26,-27,-28,-29,-30,-34,-43,-36,-97,-77,-16,-17,-22,-21,-75,-62,-15,-61,-64,-60,-23,-65,-89,-90,-92,-91,-93,-94,-96,-95,-85,-86,-87,-88,]),'HASH':([0,2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,20,24,28,30,31,34,37,44,45,46,47,49,56,58,59,60,64,66,70,75,76,77,78,79,80,81,82,92,93,96,97,98,101,102,105,127,130,140,158,174,178,181,182,183,184,200,201,202,203,208,209,210,211,],[5,5,-12,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-31,-25,-44,-42,-37,-32,-35,5,-13,-19,-24,-38,-39,-40,-41,-33,-76,5,-78,-14,-18,-20,-63,-26,-27,-28,-29,-30,-34,-43,-36,-97,-77,-16,-17,-22,-21,-75,-62,-15,-61,-64,-60,-23,-65,-89,-90,-92,-91,-93,-94,-96,-95,-85,-86,-87,-88,]),'TYPE':([0,2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,20,24,28,30,31,34,36,37,44,45,46,47,49,52,56,58,59,60,63,64,66,70,75,76,77,78,79,80,81,82,92,93,96,97,98,101,102,103,105,106,111,127,130,134,137,138,140,158,159,162,174,176,178,181,182,183,184,200,201,202,203,208,209,210,211,],[14,14,-12,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-31,-25,-44,-42,-37,-32,-35,14,-13,-19,71,-24,-38,-39,-40,-41,-33,88,-76,14,-78,-14,71,-18,-20,-63,-26,-27,-28,-29,-30,-34,-43,-36,-97,-77,-16,-17,-22,-21,-75,71,-62,71,71,-15,-61,71,71,71,-64,-60,71,71,-23,71,-65,-89,-90,-92,-91,-93,-94,-96,-95,-85,-86,-87,-88,]),'IF':([0,2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,20,24,28,30,31,34,37,44,45,46,47,49,56,58,59,60,64,66,70,75,76,77,78,79,80,81,82,92,93,96,97,98,101,102,105,127,130,140,158,174,178,181,182,183,184,200,201,202,203,208,209,210,211,],[22,22,-12,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-31,-25,-44,-42,-37,-32,-35,22,-13,-19,-24,-38,-39,-40,-41,-33,-76,22,-78,-14,-18,-20,-63,-26,-27,-28,-29,-30,-34,-43,-36,-97,-77,-16,-17,-22,-21,-75,-62,-15,-61,-64,-60,-23,-65,-89,-90,-92,-91,-93,-94,-96,-95,-85,-86,-87,-88,]),'FOR':([0,2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,20,24,28,30,31,34,37,44,45,46,47,49,56,58,59,60,64,66,70,75,76,77,78,79,80,81,82,92,93,96,97,98,101,102,105,127,130,140,158,174,178,181,182,183,184,200,201,202,203,208,209,210,211,],[23,23,-12,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-31,-25,-44,-42,-37,-32,-35,23,-13,-19,-24,-38,-39,-40,-41,-33,-76,23,-78,-14,-18,-20,-63,-26,-27,-28,-29,-30,-34,-43,-36,-97,-77,-16,-17,-22,-21,-75,-62,-15,-61,-64,-60,-23,-65,-89,-90,-92,-91,-93,-94,-96,-95,-85,-86,-87,-88,]),'WHILE':([0,2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,20,24,28,30,31,34,37,44,45,46,47,49,54,56,58,59,60,64,66,70,75,76,77,78,79,80,81,82,92,93,96,97,98,101,102,105,127,130,140,158,174,178,181,182,183,184,200,201,202,203,208,209,210,211,],[25,25,-12,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-31,-25,-44,-42,-37,-32,-35,25,-13,-19,-24,-38,-39,-40,-41,-33,91,-76,25,-78,-14,-18,-20,-63,-26,-27,-28,-29,-30,-34,-43,-36,-97,-77,-16,-17,-22,-21,-75,-62,-15,-61,-64,-60,-23,-65,-89,-90,-92,-91,-93,-94,-96,-95,-85,-86,-87,-88,]),'DO':([0,2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,20,24,28,30,31,34,37,44,45,46,47,49,56,58,59,60,64,66,70,75,76,77,78,79,80,81,82,92,93,96,97,98,101,102,105,127,130,140,158,174,178,181,182,183,184,200,201,202,203,208,209,210,211,],[26,26,-12,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-31,-25,-44,-42,-37,-32,-35,26,-13,-19,-24,-38,-39,-40,-41,-33,-76,26,-78,-14,-18,-20,-63,-26,-27,-28,-29,-30,-34,-43,-36,-97,-77,-16,-17,-22,-21,-75,-62,-15,-61,-64,-60,-23,-65,-89,-90,-92,-91,-93,-94,-96,-95,-85,-86,-87,-88,]),'RETURN':([0,2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,20,24,28,30,31,34,37,44,45,46,47,49,56,58,59,60,64,66,70,75,76,77,78,79,80,81,82,92,93,96,97,98,101,102,105,127,130,140,158,174,178,181,182,183,184,200,201,202,203,208,209,210,211,],[27,27,-12,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-31,-25,-44,-42,-37,-32,-35,27,-13,-19,-24,-38,-39,-40,-41,-33,-76,27,-78,-14,-18,-20,-63,-26,-27,-28,-29,-30,-34,-43,-36,-97,-77,-16,-17,-22,-21,-75,-62,-15,-61,-64,-60,-23,-65,-89,-90,-92,-91,-93,-94,-96,-95,-85,-86,-87,-88,]),'ID':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,24,27,28,29,30,31,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,51,53,56,58,59,60,61,62,63,64,66,70,71,72,75,76,77,78,79,80,81,82,87,88,92,93,96,97,98,101,102,103,104,105,106,108,111,113,114,115,116,117,118,119,120,121,124,125,126,127,128,130,134,135,137,138,140,150,158,159,162,172,173,174,176,178,179,180,181,182,183,184,200,201,202,203,208,209,210,211,],[15,15,-12,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,32,-31,-25,-44,-42,49,-37,15,-32,15,-35,57,15,-13,64,-19,15,68,-24,15,15,15,15,15,15,-38,-39,-40,-41,15,-33,84,89,-76,15,-78,-14,94,15,68,-18,-20,-63,107,110,-26,-27,-28,-29,-30,-34,-43,-36,122,123,-97,-77,-16,-17,-22,-21,-75,68,15,-62,68,136,68,141,-79,-80,-81,-82,-83,-84,145,148,151,154,155,-15,15,-61,68,15,68,68,-64,166,-60,68,68,185,188,-23,68,-65,190,191,-89,-90,-92,-91,-93,-94,-96,-95,-85,-86,-87,-88,]),'NUMBER':([0,2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,20,21,24,27,28,30,31,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,51,53,56,58,59,60,61,62,63,64,66,70,75,76,77,78,79,80,81,82,92,93,96,97,98,101,102,103,104,105,106,111,113,114,115,116,117,118,119,120,121,124,125,126,127,128,130,134,135,137,138,140,150,158,159,162,172,173,174,176,178,181,182,183,184,200,201,202,203,208,209,210,211,],[24,24,-12,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-31,-25,-44,-42,-37,24,-32,24,-35,24,-13,-19,24,24,-24,24,24,24,24,24,24,-38,-39,-40,-41,24,-33,85,90,-76,24,-78,-14,24,24,24,-18,-20,-63,-26,-27,-28,-29,-30,-34,-43,-36,-97,-77,-16,-17,-22,-21,-75,24,24,-62,24,24,142,-79,-80,-81,-82,-83,-84,144,149,152,153,156,-15,24,-61,24,24,24,24,-64,167,-60,24,24,186,187,-23,24,-65,-89,-90,-92,-91,-93,-94,-96,-95,-85,-86,-87,-88,]),'TIMES':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20,21,24,27,28,30,31,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,55,56,58,59,60,61,62,63,64,66,67,68,70,71,73,74,75,76,77,78,79,80,81,82,88,92,93,94,95,96,97,98,101,102,103,104,105,106,110,111,127,128,130,134,135,137,138,140,157,158,159,162,174,176,178,181,182,183,184,200,201,202,203,208,209,210,211,],[19,19,-12,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,33,-31,40,-44,-42,-37,19,-32,19,-35,19,-13,-19,19,72,-24,19,19,19,19,19,19,-38,-39,-40,-41,19,-33,40,40,-76,19,-78,-14,19,19,72,-18,-20,40,-31,-63,108,-37,40,40,40,40,40,40,40,40,-36,33,-97,-77,-31,40,-16,-17,-22,-21,-75,72,19,-62,72,-33,72,-15,19,-61,72,19,72,72,-64,40,-60,72,72,-23,72,-65,-89,-90,-92,-91,-93,-94,-96,-95,-85,-86,-87,-88,]),'STRING':([0,2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,20,21,24,27,28,30,31,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,56,58,59,60,61,62,63,64,66,70,75,76,77,78,79,80,81,82,92,93,96,97,98,101,102,103,104,105,106,111,127,128,130,134,135,137,138,140,158,159,162,174,176,178,181,182,183,184,200,201,202,203,208,209,210,211,],[28,28,-12,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-31,-25,-44,-42,-37,28,-32,28,-35,28,-13,-19,28,28,-24,28,28,28,28,28,28,-38,-39,-40,-41,28,-33,-76,28,-78,-14,28,28,28,-18,-20,-63,-26,-27,-28,-29,-30,-34,-43,-36,-97,-77,-16,-17,-22,-21,-75,28,28,-62,28,28,-15,28,-61,28,28,28,28,-64,-60,28,28,-23,28,-65,-89,-90,-92,-91,-93,-94,-96,-95,-85,-86,-87,-88,]),'LPAREN':([0,2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,20,21,22,23,24,25,27,28,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,56,58,59,60,61,62,63,64,66,68,70,75,76,77,78,79,80,81,82,91,92,93,94,96,97,98,101,102,103,104,105,106,111,127,128,130,134,135,137,138,140,158,159,162,174,176,178,181,182,183,184,200,201,202,203,208,209,210,211,],[21,21,-12,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,36,-25,-44,-42,-37,21,51,52,-32,53,21,-35,21,-13,63,-19,21,21,-24,21,21,21,21,21,21,-38,-39,-40,-41,21,-33,-76,21,-78,-14,21,21,21,-18,-20,36,-63,-26,-27,-28,-29,-30,-34,-43,-36,126,-97,-77,36,-16,-17,-22,-21,-75,21,21,-62,21,21,-15,21,-61,21,21,21,21,-64,-60,21,21,-23,21,-65,-89,-90,-92,-91,-93,-94,-96,-95,-85,-86,-87,-88,]),'AMPERSAND':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20,21,24,27,28,29,30,31,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,51,56,58,59,60,61,62,63,64,66,70,71,75,76,77,78,79,80,81,82,88,92,93,96,97,98,101,102,103,104,105,106,111,113,114,115,116,117,118,119,120,121,127,128,130,134,135,137,138,140,158,159,162,174,176,178,181,182,183,184,200,201,202,203,208,209,210,211,],[29,29,-12,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,29,-31,-25,-44,-42,-37,29,-32,29,-35,29,29,-13,29,-19,29,29,-24,29,29,29,29,29,29,-38,-39,-40,-41,29,-33,29,-76,29,-78,-14,29,29,29,-18,-20,-63,29,-26,-27,-28,-29,-30,-34,-43,-36,29,-97,-77,-16,-17,-22,-21,-75,29,29,-62,29,29,29,-79,-80,-81,-82,-83,-84,29,29,-15,29,-61,29,29,29,29,-64,-60,29,29,-23,29,-65,-89,-90,-92,-91,-93,-94,-96,-95,-85,-86,-87,-88,]),'LBRACE':([0,2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,20,21,24,26,27,28,30,31,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,56,58,59,60,61,62,63,64,66,70,75,76,77,78,79,80,81,82,92,93,96,97,98,100,101,102,103,104,105,106,111,112,127,128,129,130,134,135,137,138,140,158,159,162,165,168,169,170,171,174,176,178,181,182,183,184,200,201,202,203,204,205,206,207,208,209,210,211,],[30,30,-12,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-31,-25,-44,-42,-37,30,-32,30,30,-35,30,-13,-19,30,30,-24,30,30,30,30,30,30,-38,-39,-40,-41,30,-33,-76,30,-78,-14,30,30,30,-18,-20,-63,-26,-27,-28,-29,-30,-34,-43,-36,-97,-77,-16,-17,-22,30,-21,-75,30,30,-62,30,30,30,-15,30,30,-61,30,30,30,30,-64,-60,30,30,30,30,30,30,30,-23,30,-65,-89,-90,-92,-91,-93,-94,-96,-95,30,30,30,30,-85,-86,-87,-88,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,20,24,28,31,34,37,44,45,46,47,49,56,59,60,64,66,70,75,76,77,78,79,80,81,82,92,93,96,97,98,101,102,105,127,130,140,158,174,178,181,182,183,184,200,201,202,203,208,209,210,211,],[0,-1,-12,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-31,-25,-44,-42,-37,-32,-35,-13,-19,-24,-38,-39,-40,-41,-33,-76,-78,-14,-18,-20,-63,-26,-27,-28,-29,-30,-34,-43,-36,-97,-77,-16,-17,-22,-21,-75,-62,-15,-61,-64,-60,-23,-65,-89,-90,-92,-91,-93,-94,-96,-95,-85,-86,-87,-88,]),'RBRACE':([3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,20,24,28,30,31,34,37,44,45,46,47,49,56,58,59,60,64,66,70,75,76,77,78,79,80,81,82,92,93,96,97,98,101,102,105,127,130,140,158,174,178,181,182,183,184,200,201,202,203,208,209,210,211,],[-12,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-31,-25,-44,-42,-37,-32,-35,59,-13,-19,-24,-38,-39,-40,-41,-33,-76,93,-78,-14,-18,-20,-63,-26,-27,-28,-29,-30,-34,-43,-36,-97,-77,-16,-17,-22,-21,-75,-62,-15,-61,-64,-60,-23,-65,-89,-90,-92,-91,-93,-94,-96,-95,-85,-86,-87,-88,]),'SEMICOLON':([15,16,17,18,20,24,28,32,34,44,45,46,47,49,55,56,59,65,70,75,76,77,78,79,80,81,82,93,94,95,96,97,102,105,123,157,166,167,192,193,194,195,],[-31,37,-44,-42,-37,-32,-35,60,66,-38,-39,-40,-41,-33,92,-76,-78,101,-63,-26,-27,-28,-29,-30,-34,-43,-36,-77,-31,127,-44,-42,-75,-62,60,174,179,180,200,201,202,203,]),'PLUS':([15,16,17,18,20,24,28,44,45,46,47,49,50,55,56,59,67,68,70,73,74,75,76,77,78,79,80,81,82,93,94,95,96,97,102,105,110,157,],[-31,38,-44,-42,-37,-32,-35,-38,-39,-40,-41,-33,38,38,-76,-78,38,-31,-63,-37,38,38,38,38,38,38,38,38,-36,-77,-31,38,-44,-42,-75,-62,-33,38,]),'MINUS':([15,16,17,18,20,24,28,44,45,46,47,49,50,55,56,59,67,68,70,73,74,75,76,77,78,79,80,81,82,93,94,95,96,97,102,105,110,157,],[-31,39,-44,-42,-37,-32,-35,-38,-39,-40,-41,-33,39,39,-76,-78,39,-31,-63,-37,39,39,39,39,39,39,39,39,-36,-77,-31,39,-44,-42,-75,-62,-33,39,]),'DIVIDE':([15,16,17,18,20,24,28,44,45,46,47,49,50,55,56,59,67,68,70,73,74,75,76,77,78,79,80,81,82,93,94,95,96,97,102,105,110,157,],[-31,41,-44,-42,-37,-32,-35,-38,-39,-40,-41,-33,41,41,-76,-78,41,-31,-63,-37,41,41,41,41,41,41,41,41,-36,-77,-31,41,-44,-42,-75,-62,-33,41,]),'MOD':([15,16,17,18,20,24,28,44,45,46,47,49,50,55,56,59,67,68,70,73,74,75,76,77,78,79,80,81,82,93,94,95,96,97,102,105,110,157,],[-31,42,-44,-42,-37,-32,-35,-38,-39,-40,-41,-33,42,42,-76,-78,42,-31,-63,-37,42,42,42,42,42,42,42,42,-36,-77,-31,42,-44,-42,-75,-62,-33,42,]),'ASSIGN':([15,16,17,18,20,24,28,32,44,45,46,47,49,50,55,56,59,67,68,70,73,74,75,76,77,78,79,80,81,82,93,94,95,96,97,98,102,105,110,123,157,],[-31,43,-44,-42,-37,-32,-35,61,-38,-39,-40,-41,-33,43,43,-76,-78,43,-31,-63,-37,43,43,43,43,43,43,43,43,-36,-77,-31,43,-44,-42,128,-75,-62,-33,61,43,]),'PLUS_PLUS':([15,16,17,18,20,24,28,44,45,46,47,49,50,55,56,59,67,68,70,73,74,75,76,77,78,79,80,81,82,93,94,95,96,97,102,105,110,157,190,191,],[-31,44,-44,-42,-37,-32,-35,-38,-39,-40,-41,-33,44,44,-76,-78,44,-31,-63,-37,44,44,44,44,44,44,44,44,-36,-77,-31,44,-44,-42,-75,-62,-33,44,196,198,]),'MINUS_MINUS':([15,16,17,18,20,24,28,44,45,46,47,49,50,55,56,59,67,68,70,73,74,75,76,77,78,79,80,81,82,93,94,95,96,97,102,105,110,157,190,191,],[-31,45,-44,-42,-37,-32,-35,-38,-39,-40,-41,-33,45,45,-76,-78,45,-31,-63,-37,45,45,45,45,45,45,45,45,-36,-77,-31,45,-44,-42,-75,-62,-33,45,197,199,]),'PLUS_EQUAL':([15,16,17,18,20,24,28,44,45,46,47,49,50,55,56,59,67,68,70,73,74,75,76,77,78,79,80,81,82,93,94,95,96,97,102,105,110,157,],[-31,46,-44,-42,-37,-32,-35,-38,-39,-40,-41,-33,46,46,-76,-78,46,-31,-63,-37,46,46,46,46,46,46,46,46,-36,-77,-31,46,-44,-42,-75,-62,-33,46,]),'MINUS_EQUAL':([15,16,17,18,20,24,28,44,45,46,47,49,50,55,56,59,67,68,70,73,74,75,76,77,78,79,80,81,82,93,94,95,96,97,102,105,110,157,],[-31,47,-44,-42,-37,-32,-35,-38,-39,-40,-41,-33,47,47,-76,-78,47,-31,-63,-37,47,47,47,47,47,47,47,47,-36,-77,-31,47,-44,-42,-75,-62,-33,47,]),'COMMA':([15,16,17,18,20,24,28,44,45,46,47,49,50,55,56,59,67,68,69,70,73,74,75,76,77,78,79,80,81,82,93,94,95,96,97,99,102,105,107,109,110,131,132,133,136,139,157,160,161,163,164,175,177,189,],[-31,48,-44,-42,-37,-32,-35,-38,-39,-40,-41,-33,48,48,-76,-78,48,103,106,-63,111,48,48,48,48,48,48,48,48,-36,-77,-31,48,-44,-42,106,-75,-62,134,137,138,106,159,106,162,106,48,106,176,106,106,106,106,106,]),'RPAREN':([15,17,18,20,24,28,36,44,45,46,47,49,50,56,59,63,68,69,70,73,74,75,76,77,78,79,80,81,82,83,93,99,102,105,107,110,131,132,133,136,139,141,142,143,144,145,146,147,148,149,151,152,153,154,160,161,163,164,175,177,185,186,187,188,189,196,197,198,199,],[-31,-44,-42,-37,-32,-35,70,-38,-39,-40,-41,-33,82,-76,-78,100,-31,105,-63,-37,-58,-26,-27,-28,-29,-30,-34,-43,-36,112,-77,129,-75,-62,-45,-33,-52,-55,-59,-47,-57,-66,-67,-68,-70,-69,-71,-74,-72,-73,168,169,170,171,-46,-49,-51,-54,-56,-48,192,193,194,195,-50,204,205,206,207,]),'RBRACK':([15,17,18,20,24,28,44,45,46,47,49,56,59,62,67,70,75,76,77,78,79,80,81,82,93,102,104,105,135,],[-31,-44,-42,-37,-32,-35,-38,-39,-40,-41,-33,-76,-78,98,102,-63,-26,-27,-28,-29,-30,-34,-43,-36,-77,-75,132,-62,161,]),'LBRACK':([15,32,57,64,68,84,94,107,123,141,145,148,],[35,62,35,35,104,35,35,135,62,35,35,35,]),'EQ':([56,84,85,86,89,90,102,122,155,156,],[-76,114,114,114,114,114,-75,114,114,114,]),'NE':([56,84,85,86,89,90,102,122,155,156,],[-76,115,115,115,115,115,-75,115,115,115,]),'GE':([56,84,85,86,89,90,102,122,155,156,],[-76,116,116,116,116,116,-75,116,116,116,]),'LE':([56,84,85,86,89,90,102,122,155,156,],[-76,117,117,117,117,117,-75,117,117,117,]),'GT':([56,84,85,86,89,90,102,122,155,156,],[-76,118,118,118,118,118,-75,118,118,118,]),'LT':([56,84,85,86,89,90,102,122,155,156,],[-76,119,119,119,119,119,-75,119,119,119,]),'ELSE':([59,93,140,],[-78,-77,165,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statement_list':([0,30,],[2,58,]),'statement':([0,2,30,58,],[3,31,3,31,]),'declaration':([0,2,30,52,58,],[6,6,6,87,6,]),'declaration_func':([0,2,30,58,],[7,7,7,7,]),'expression_statement':([0,2,30,58,],[8,8,8,8,]),'if_expression':([0,2,30,58,],[9,9,9,9,]),'for_expreression':([0,2,30,58,],[10,10,10,10,]),'while_expression':([0,2,30,58,],[11,11,11,11,]),'while_do_expression':([0,2,30,58,],[12,12,12,12,]),'return':([0,2,30,58,],[13,13,13,13,]),'expression':([0,2,21,27,30,35,36,38,39,40,41,42,43,48,58,61,62,63,103,104,106,111,128,134,135,137,138,159,162,176,],[16,16,50,55,16,67,74,75,76,77,78,79,80,81,16,95,67,74,74,67,74,74,157,74,67,74,74,74,74,74,]),'funct':([0,2,21,27,30,35,36,38,39,40,41,42,43,48,58,61,62,63,103,104,106,111,128,134,135,137,138,159,162,176,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,96,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'block':([0,2,21,26,27,30,35,36,38,39,40,41,42,43,48,58,61,62,63,100,103,104,106,111,112,128,129,134,135,137,138,159,162,165,168,169,170,171,176,204,205,206,207,],[18,18,18,54,18,18,18,18,18,18,18,18,18,18,18,18,97,18,18,130,18,18,18,18,140,18,158,18,18,18,18,18,18,178,181,182,183,184,18,208,209,210,211,]),'vector':([0,2,14,21,27,29,30,33,35,36,38,39,40,41,42,43,48,51,58,61,62,63,71,88,103,104,106,111,113,120,121,128,134,135,137,138,159,162,176,],[20,20,34,20,20,56,20,65,20,73,20,20,20,20,20,20,20,86,20,20,20,73,109,34,73,20,73,73,143,146,147,20,73,20,73,73,73,73,73,]),'parameters':([36,63,103,106,111,134,137,138,159,162,176,],[69,99,131,133,139,160,163,164,175,177,189,]),'condicional':([51,],[83,]),'operadoror_comp':([84,85,86,89,90,122,155,156,],[113,120,121,124,125,150,172,173,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','analisador_sintatico.py',16),
  ('statement -> COMMENT','statement',1,'p_comment','analisador_sintatico.py',21),
  ('statement -> HASH','statement',1,'p_preprocessor_directive','analisador_sintatico.py',27),
  ('statement -> declaration','statement',1,'p_statement','analisador_sintatico.py',33),
  ('statement -> declaration_func','statement',1,'p_statement','analisador_sintatico.py',34),
  ('statement -> expression_statement','statement',1,'p_statement','analisador_sintatico.py',35),
  ('statement -> if_expression','statement',1,'p_statement','analisador_sintatico.py',36),
  ('statement -> for_expreression','statement',1,'p_statement','analisador_sintatico.py',37),
  ('statement -> while_expression','statement',1,'p_statement','analisador_sintatico.py',38),
  ('statement -> while_do_expression','statement',1,'p_statement','analisador_sintatico.py',39),
  ('statement -> return','statement',1,'p_statement','analisador_sintatico.py',40),
  ('statement_list -> statement','statement_list',1,'p_statement_list','analisador_sintatico.py',45),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','analisador_sintatico.py',46),
  ('declaration -> TYPE ID SEMICOLON','declaration',3,'p_declaration','analisador_sintatico.py',54),
  ('declaration -> TYPE ID ASSIGN expression SEMICOLON','declaration',5,'p_declaration','analisador_sintatico.py',55),
  ('declaration -> TYPE ID ASSIGN funct','declaration',4,'p_declaration','analisador_sintatico.py',56),
  ('declaration -> TYPE ID ASSIGN block','declaration',4,'p_declaration','analisador_sintatico.py',57),
  ('declaration -> TYPE TIMES ID','declaration',3,'p_declaration','analisador_sintatico.py',58),
  ('declaration -> TYPE vector','declaration',2,'p_declaration','analisador_sintatico.py',59),
  ('declaration -> TYPE vector SEMICOLON','declaration',3,'p_declaration','analisador_sintatico.py',60),
  ('declaration -> TYPE TIMES vector SEMICOLON','declaration',4,'p_declaration','analisador_sintatico.py',61),
  ('declaration -> TYPE ID LBRACK RBRACK','declaration',4,'p_declaration','analisador_sintatico.py',62),
  ('declaration -> TYPE ID LBRACK RBRACK ASSIGN expression SEMICOLON','declaration',7,'p_declaration','analisador_sintatico.py',63),
  ('expression_statement -> expression SEMICOLON','expression_statement',2,'p_expression_statement','analisador_sintatico.py',76),
  ('expression_statement -> expression','expression_statement',1,'p_expression_statement','analisador_sintatico.py',77),
  ('expression -> expression PLUS expression','expression',3,'p_expression','analisador_sintatico.py',82),
  ('expression -> expression MINUS expression','expression',3,'p_expression','analisador_sintatico.py',83),
  ('expression -> expression TIMES expression','expression',3,'p_expression','analisador_sintatico.py',84),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression','analisador_sintatico.py',85),
  ('expression -> expression MOD expression','expression',3,'p_expression','analisador_sintatico.py',86),
  ('expression -> ID','expression',1,'p_expression','analisador_sintatico.py',87),
  ('expression -> NUMBER','expression',1,'p_expression','analisador_sintatico.py',88),
  ('expression -> TIMES ID','expression',2,'p_expression','analisador_sintatico.py',89),
  ('expression -> expression ASSIGN expression','expression',3,'p_expression','analisador_sintatico.py',90),
  ('expression -> STRING','expression',1,'p_expression','analisador_sintatico.py',91),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression','analisador_sintatico.py',92),
  ('expression -> vector','expression',1,'p_expression','analisador_sintatico.py',93),
  ('expression -> expression PLUS_PLUS','expression',2,'p_expression','analisador_sintatico.py',94),
  ('expression -> expression MINUS_MINUS','expression',2,'p_expression','analisador_sintatico.py',95),
  ('expression -> expression PLUS_EQUAL','expression',2,'p_expression','analisador_sintatico.py',96),
  ('expression -> expression MINUS_EQUAL','expression',2,'p_expression','analisador_sintatico.py',97),
  ('expression -> block','expression',1,'p_expression','analisador_sintatico.py',98),
  ('expression -> expression COMMA expression','expression',3,'p_expression','analisador_sintatico.py',99),
  ('expression -> funct','expression',1,'p_expression','analisador_sintatico.py',100),
  ('parameters -> TYPE ID','parameters',2,'p_parameters','analisador_sintatico.py',108),
  ('parameters -> TYPE ID COMMA parameters','parameters',4,'p_parameters','analisador_sintatico.py',109),
  ('parameters -> TYPE TIMES ID','parameters',3,'p_parameters','analisador_sintatico.py',110),
  ('parameters -> TYPE TIMES ID COMMA parameters','parameters',5,'p_parameters','analisador_sintatico.py',111),
  ('parameters -> TYPE ID LBRACK RBRACK','parameters',4,'p_parameters','analisador_sintatico.py',112),
  ('parameters -> TYPE ID LBRACK RBRACK COMMA parameters','parameters',6,'p_parameters','analisador_sintatico.py',113),
  ('parameters -> TYPE vector COMMA parameters','parameters',4,'p_parameters','analisador_sintatico.py',114),
  ('parameters -> ID COMMA parameters','parameters',3,'p_parameters','analisador_sintatico.py',115),
  ('parameters -> TIMES ID','parameters',2,'p_parameters','analisador_sintatico.py',116),
  ('parameters -> TIMES ID COMMA parameters','parameters',4,'p_parameters','analisador_sintatico.py',117),
  ('parameters -> ID LBRACK RBRACK','parameters',3,'p_parameters','analisador_sintatico.py',118),
  ('parameters -> ID LBRACK RBRACK COMMA parameters','parameters',5,'p_parameters','analisador_sintatico.py',119),
  ('parameters -> vector COMMA parameters','parameters',3,'p_parameters','analisador_sintatico.py',120),
  ('parameters -> expression','parameters',1,'p_parameters','analisador_sintatico.py',121),
  ('parameters -> parameters COMMA parameters','parameters',3,'p_parameters','analisador_sintatico.py',122),
  ('declaration_func -> TYPE ID LPAREN parameters RPAREN block','declaration_func',6,'p_declaration_func','analisador_sintatico.py',135),
  ('declaration_func -> TYPE ID LPAREN RPAREN block','declaration_func',5,'p_declaration_func','analisador_sintatico.py',136),
  ('funct -> ID LPAREN parameters RPAREN','funct',4,'p_funct','analisador_sintatico.py',140),
  ('funct -> ID LPAREN RPAREN','funct',3,'p_funct','analisador_sintatico.py',141),
  ('if_expression -> IF LPAREN condicional RPAREN block','if_expression',5,'p_if_expression','analisador_sintatico.py',148),
  ('if_expression -> IF LPAREN condicional RPAREN block ELSE block','if_expression',7,'p_if_expression','analisador_sintatico.py',149),
  ('condicional -> ID operadoror_comp ID','condicional',3,'p_condicional','analisador_sintatico.py',156),
  ('condicional -> ID operadoror_comp NUMBER','condicional',3,'p_condicional','analisador_sintatico.py',157),
  ('condicional -> ID operadoror_comp vector','condicional',3,'p_condicional','analisador_sintatico.py',158),
  ('condicional -> NUMBER operadoror_comp ID','condicional',3,'p_condicional','analisador_sintatico.py',159),
  ('condicional -> NUMBER operadoror_comp NUMBER','condicional',3,'p_condicional','analisador_sintatico.py',160),
  ('condicional -> NUMBER operadoror_comp vector','condicional',3,'p_condicional','analisador_sintatico.py',161),
  ('condicional -> vector operadoror_comp ID','condicional',3,'p_condicional','analisador_sintatico.py',162),
  ('condicional -> vector operadoror_comp NUMBER','condicional',3,'p_condicional','analisador_sintatico.py',163),
  ('condicional -> vector operadoror_comp vector','condicional',3,'p_condicional','analisador_sintatico.py',164),
  ('vector -> ID LBRACK expression RBRACK','vector',4,'p_vector','analisador_sintatico.py',168),
  ('vector -> AMPERSAND vector','vector',2,'p_vector','analisador_sintatico.py',169),
  ('block -> LBRACE statement_list RBRACE','block',3,'p_block','analisador_sintatico.py',173),
  ('block -> LBRACE RBRACE','block',2,'p_block','analisador_sintatico.py',174),
  ('operadoror_comp -> EQ','operadoror_comp',1,'p_operador_comp','analisador_sintatico.py',180),
  ('operadoror_comp -> NE','operadoror_comp',1,'p_operador_comp','analisador_sintatico.py',181),
  ('operadoror_comp -> GE','operadoror_comp',1,'p_operador_comp','analisador_sintatico.py',182),
  ('operadoror_comp -> LE','operadoror_comp',1,'p_operador_comp','analisador_sintatico.py',183),
  ('operadoror_comp -> GT','operadoror_comp',1,'p_operador_comp','analisador_sintatico.py',184),
  ('operadoror_comp -> LT','operadoror_comp',1,'p_operador_comp','analisador_sintatico.py',185),
  ('for_expreression -> FOR LPAREN declaration ID operadoror_comp ID SEMICOLON ID PLUS_PLUS RPAREN block','for_expreression',11,'p_for_expression','analisador_sintatico.py',188),
  ('for_expreression -> FOR LPAREN declaration ID operadoror_comp ID SEMICOLON ID MINUS_MINUS RPAREN block','for_expreression',11,'p_for_expression','analisador_sintatico.py',189),
  ('for_expreression -> FOR LPAREN declaration ID operadoror_comp NUMBER SEMICOLON ID PLUS_PLUS RPAREN block','for_expreression',11,'p_for_expression','analisador_sintatico.py',190),
  ('for_expreression -> FOR LPAREN declaration ID operadoror_comp NUMBER SEMICOLON ID MINUS_MINUS RPAREN block','for_expreression',11,'p_for_expression','analisador_sintatico.py',191),
  ('while_expression -> WHILE LPAREN ID operadoror_comp ID RPAREN block','while_expression',7,'p_while_expression','analisador_sintatico.py',196),
  ('while_expression -> WHILE LPAREN ID operadoror_comp NUMBER RPAREN block','while_expression',7,'p_while_expression','analisador_sintatico.py',197),
  ('while_expression -> WHILE LPAREN NUMBER operadoror_comp ID RPAREN block','while_expression',7,'p_while_expression','analisador_sintatico.py',198),
  ('while_expression -> WHILE LPAREN NUMBER operadoror_comp NUMBER RPAREN block','while_expression',7,'p_while_expression','analisador_sintatico.py',199),
  ('while_do_expression -> DO block WHILE LPAREN ID operadoror_comp ID RPAREN SEMICOLON','while_do_expression',9,'p_while_do_expression','analisador_sintatico.py',204),
  ('while_do_expression -> DO block WHILE LPAREN ID operadoror_comp NUMBER RPAREN SEMICOLON','while_do_expression',9,'p_while_do_expression','analisador_sintatico.py',205),
  ('while_do_expression -> DO block WHILE LPAREN NUMBER operadoror_comp ID RPAREN SEMICOLON','while_do_expression',9,'p_while_do_expression','analisador_sintatico.py',206),
  ('while_do_expression -> DO block WHILE LPAREN NUMBER operadoror_comp NUMBER RPAREN SEMICOLON','while_do_expression',9,'p_while_do_expression','analisador_sintatico.py',207),
  ('return -> RETURN expression SEMICOLON','return',3,'p_return','analisador_sintatico.py',212),
]
